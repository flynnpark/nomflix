{"version":3,"sources":["assets/noPosterSmall.png","api.ts","components/Loading.tsx","components/Section.tsx","components/Poster.tsx","routes/Home.tsx","routes/TV.tsx","routes/Search.tsx","components/MovieDetailData.tsx","components/TVDetailData.tsx","components/NoResult.tsx","routes/Detail.tsx","components/Header.tsx","components/Router.tsx","components/GlobalStyles.tsx","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","API","Axios","create","baseURL","params","api_key","process","language","moviesAPI","get","id","concat","append_to_response","term","query","encodeURIComponent","tvAPI","Container","styled","div","_templateObject","Loading","react_default","a","createElement","role","aria-label","Section_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","Section_Container","Poster_templateObject","Image","Poster_templateObject2","props","bgURL","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","imageURL","rating","year","_ref$isMovie","isMovie","react_router_dom","to","Poster_Container","require","Poster_Title","length","substring","Home_templateObject","Home","_useFetch","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","result","setResult","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_ref2","nowPlaying","_ref3","upcoming","_ref4","popular","wrap","_context","prev","next","sent","data","results","t0","finish","stop","apply","this","arguments","fetchData","useFetch","Fragment","Helmet_default","components_Loading","Home_Container","components_Section","map","movie","components_Poster","key","poster_path","original_title","vote_average","release_date","TV_templateObject","TV","topRated","airingToday","TV_Container","show","original_name","first_air_date","Search_templateObject","Form","form","Search_templateObject2","Input","input","Search_templateObject3","Search","defaultValue","value","setValue","onChange","event","currentTarget","useInput","_useState9","_useState10","termValue","setTermValue","_useState7","_useState8","setResults","movieResults","tvResults","abrupt","Search_Container","onSubmit","preventDefault","assign","placeholder","MovieDetailData","Data","Detail_Title","ItemContainer","Item","Divider","runtime","genres","genre","index","name","Overview","overview","TVDetailData","episode_run_time","NoResult","Detail_templateObject","Backdrop","Detail_templateObject2","Content","Detail_templateObject3","Cover","Detail_templateObject4","Detail_templateObject5","h3","Detail_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","withRouter","pathname","location","history","push","movieId","_data","parseInt","includes","Error","match","Detail_Container","backdrop_path","components_MovieDetailData","components_TVDetailData","renderData","components_NoResult","Navigation","header","Header_templateObject","List","ul","Header_templateObject2","ListItem","li","Header_templateObject3","current","StyledLink","Link","Header_templateObject4","Router","components_Header","react_router","exact","path","component","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","components_Router","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b7db323c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import Axios, { AxiosInstance, AxiosPromise } from 'axios';\n\nconst API: AxiosInstance = Axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: process.env.REACT_APP_TMDB_KEY,\n    language: 'en-US'\n  }\n});\n\nexport interface MovieItem {\n  vote_count: number;\n  id: number;\n  video: boolean;\n  vote_average: number;\n  title: string;\n  popularity: number;\n  poster_path: string;\n  original_language: string;\n  original_title: string;\n  genre_ids: Array<number>;\n  backdrop_path: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n}\n\ninterface MovieListData {\n  page: number;\n  total_results: number;\n  total_pages: number;\n  results: MovieItem[];\n}\n\ninterface Genre {\n  id: number;\n  name: string;\n}\n\ninterface Company {\n  id: number;\n  logo_path: string | null;\n  name: string;\n  origin_country: string;\n}\n\ninterface Country {\n  iso_3166_1: string;\n  name: string;\n}\n\ninterface Language {\n  iso_639_1: string;\n  name: string;\n}\n\nexport interface MovieDetail {\n  adult: boolean;\n  backdrop_path: string;\n  budget: number;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  production_companies: Company[];\n  production_countries: Country[];\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  spoken_languages: Language[];\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\ninterface IMoviesAPI {\n  nowPlaying: () => AxiosPromise<MovieListData>;\n  upcoming: () => AxiosPromise<MovieListData>;\n  popular: () => AxiosPromise<MovieListData>;\n  movieDetail: (id: number) => AxiosPromise<MovieDetail>;\n  search: (term: string) => AxiosPromise<MovieListData>;\n}\n\nexport const moviesAPI: IMoviesAPI = {\n  nowPlaying: () => API.get('movie/now_playing'),\n  upcoming: () => API.get('movie/upcoming'),\n  popular: () => API.get('movie/popular'),\n  movieDetail: (id: number) =>\n    API.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: (term: string) =>\n    API.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport interface TvItem {\n  original_name: string;\n  genre_ids: Array<number>;\n  name: string;\n  popularity: number;\n  origin_country: Array<string>;\n  vote_count: number;\n  first_air_date: string;\n  backdrop_path: string;\n  original_language: string;\n  id: number;\n  vote_average: number;\n  overview: string;\n  poster_path: string;\n}\n\ninterface TvListData {\n  page: number;\n  total_results: number;\n  total_pages: number;\n  results: TvItem[];\n}\n\ninterface TvProducer {\n  id: number;\n  credit_id: string;\n  name: string;\n  gender: number;\n  profile_path: string | null;\n}\n\ninterface LastEpisode {\n  air_date: string;\n  episode_number: number;\n  id: number;\n  name: string;\n  overview: string;\n  production_code: number | null;\n  season_number: number;\n  show_id: number;\n  still_path: string;\n  vote_average: number;\n  vote_count: number;\n}\n\ninterface Network {\n  name: string;\n  id: number;\n  logo_path: string;\n  origin_country: string;\n}\n\ninterface TvCompany {\n  id: number;\n  logo_path: string;\n  name: string;\n  origin_country: string;\n}\n\ninterface Season {\n  air_date: string;\n  episode_count: number;\n  id: number;\n  name: string;\n  overview: string;\n  poster_path: string | null;\n  season_number: number;\n}\n\nexport interface TvDetail {\n  backdrop_path: string;\n  created_by: TvProducer[];\n  episode_run_time: Array<number>;\n  first_air_date: string;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  in_production: boolean;\n  languages: Array<string>;\n  last_air_date: string;\n  last_episode_to_air: LastEpisode;\n  name: string;\n  next_episode_to_air: null;\n  networks: Network[];\n  number_of_episodes: number;\n  number_of_seasons: number;\n  origin_country: Array<string>;\n  original_language: string;\n  original_name: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  production_companies: TvCompany[];\n  seasons: Season[];\n  status: string;\n  type: string;\n  vote_average: number;\n  vote_count: number;\n}\n\ninterface ITvAPI {\n  topRated: () => AxiosPromise<TvListData>;\n  popular: () => AxiosPromise<TvListData>;\n  airingToday: () => AxiosPromise<TvListData>;\n  showDetail: (id: number) => AxiosPromise<TvDetail>;\n  search: (string: string) => AxiosPromise<TvListData>;\n}\n\nexport const tvAPI: ITvAPI = {\n  topRated: () => API.get('tv/top_rated'),\n  popular: () => API.get('tv/popular'),\n  airingToday: () => API.get('tv/airing_today'),\n  showDetail: (id: number) =>\n    API.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: (term: string) =>\n    API.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loading = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      Loading...\n    </span>\n  </Container>\n);\n\nexport default Loading;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n  margin-top: 25px;\n`;\n\ninterface IProps {\n  title: string;\n}\n\nconst Section: React.FC<IProps> = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nexport default Section;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div<{ bgURL: string }>`\n  background-image: url(${props => props.bgURL});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\ninterface IProps {\n  id: number;\n  imageURL: string;\n  title: string;\n  rating: number;\n  year: string;\n  isMovie?: boolean;\n}\n\nconst Poster: React.FC<IProps> = ({\n  id,\n  imageURL,\n  title,\n  rating,\n  year,\n  isMovie = false\n}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgURL={\n            imageURL\n              ? `https://image.tmdb.org/t/p/w300${imageURL}`\n              : require('assets/noPosterSmall.png')\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ★\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nexport default Poster;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { moviesAPI, MovieItem } from 'api';\nimport Loading from 'components/Loading';\nimport Section from 'components/Section';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst useFetch = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [result, setResult] = useState<{\n    nowPlaying: MovieItem[] | null;\n    upcoming: MovieItem[] | null;\n    popular: MovieItem[] | null;\n  } | null>(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: { results: nowPlaying }\n        } = await moviesAPI.nowPlaying();\n        const {\n          data: { results: upcoming }\n        } = await moviesAPI.upcoming();\n        const {\n          data: { results: popular }\n        } = await moviesAPI.popular();\n        setResult({\n          nowPlaying,\n          upcoming,\n          popular\n        });\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return { loading, result, error };\n};\n\nconst Home: React.FC = () => {\n  const { loading, result } = useFetch();\n  return (\n    <>\n      <Helmet title=\"Movies | Nomflix\" />\n      {loading ? (\n        <Loading />\n      ) : (\n        <Container>\n          {result && result.nowPlaying && result.nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {result.nowPlaying.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.upcoming && result.upcoming.length > 0 && (\n            <Section title=\"Upcoming\">\n              {result.upcoming.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.popular && result.popular.length > 0 && (\n            <Section title=\"Popular\">\n              {result.popular.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { TvItem, tvAPI } from 'api';\nimport Loading from 'components/Loading';\nimport Section from 'components/Section';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst useFetch = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [result, setResult] = useState<{\n    topRated: TvItem[] | null;\n    popular: TvItem[] | null;\n    airingToday: TvItem[] | null;\n  } | null>(null);\n  const fetchData = async () => {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvAPI.topRated();\n      const {\n        data: { results: popular }\n      } = await tvAPI.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvAPI.airingToday();\n      setResult({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { loading, result, error };\n};\n\nconst TV: React.FC = () => {\n  const { loading, result } = useFetch();\n  return (\n    <>\n      <Helmet title=\"TV Shows | Nomflix\" />\n      {loading ? (\n        <Loading />\n      ) : (\n        <Container>\n          {result && result.topRated && result.topRated.length > 0 && (\n            <Section title=\"Top Rated\">\n              {result.topRated.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.popular && result.popular.length > 0 && (\n            <Section title=\"Popular\">\n              {result.popular.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.airingToday && result.airingToday.length > 0 && (\n            <Section title=\"Airing Today\">\n              {result.airingToday.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default TV;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { MovieItem, TvItem, moviesAPI, tvAPI } from 'api';\nimport Loading from 'components/Loading';\nimport Section from 'components/Section';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst useInput = (defaultValue: string) => {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value }\n    } = event;\n    setValue(value);\n  };\n\n  return { value, onChange };\n};\n\nconst useFetch = (term: string) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [results, setResults] = useState<{\n    movieResults: MovieItem[] | null;\n    tvResults: TvItem[] | null;\n  } | null>(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (term.length === 0) return;\n        setLoading(true);\n        const {\n          data: { results: movieResults }\n        } = await moviesAPI.search(term);\n        const {\n          data: { results: tvResults }\n        } = await tvAPI.search(term);\n        setResults({\n          movieResults,\n          tvResults\n        });\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [term]);\n\n  return { loading, results, error };\n};\n\nconst Search: React.FC = () => {\n  const term = useInput('');\n  const [termValue, setTermValue] = useState('');\n  const { loading, results } = useFetch(termValue);\n  return (\n    <Container>\n      <Helmet title=\"Search | Nomflix\" />\n      <Form\n        onSubmit={(event: React.FormEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          setTermValue(term.value);\n        }}\n      >\n        <Input {...term} placeholder=\"Search Movies or TV Shows...\" />\n      </Form>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {results && results.movieResults && results.movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {results.movieResults.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {results && results.tvResults && results.tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {results.tvResults.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { MovieDetail } from 'api';\nimport {\n  Data,\n  ItemContainer,\n  Title,\n  Item,\n  Divider,\n  Overview\n} from 'routes/Detail';\n\ninterface IProps {\n  result: MovieDetail;\n}\n\nconst MovieDetailData: React.FC<IProps> = ({ result }) => (\n  <Data>\n    <Helmet title={`${result.original_title} | Nomflix`} />\n    <Title>{result.original_title}</Title>\n    <ItemContainer>\n      <Item>{result.release_date.substring(0, 4)}</Item>\n      <Divider>•</Divider>\n      <Item>{result.runtime} min</Item>\n      <Divider>•</Divider>\n      <Item>\n        {result.genres &&\n          result.genres.map((genre, index) =>\n            index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n          )}\n      </Item>\n    </ItemContainer>\n    <Overview>{result.overview}</Overview>\n  </Data>\n);\n\nexport default MovieDetailData;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { TvDetail } from 'api';\nimport {\n  Data,\n  ItemContainer,\n  Title,\n  Item,\n  Divider,\n  Overview\n} from 'routes/Detail';\n\ninterface IProps {\n  result: TvDetail;\n}\n\nconst TVDetailData: React.FC<IProps> = ({ result }) => (\n  <Data>\n    <Helmet title={`${result.original_name} | Nomflix`} />\n    <Title>{result.original_name}</Title>\n    <ItemContainer>\n      <Item>{result.first_air_date.substring(0, 4)}</Item>\n      <Divider>•</Divider>\n      <Item>{result.episode_run_time[0]} min</Item>\n      <Divider>•</Divider>\n      <Item>\n        {result.genres &&\n          result.genres.map((genre, index) =>\n            index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n          )}\n      </Item>\n    </ItemContainer>\n    <Overview>{result.overview}</Overview>\n  </Data>\n);\n\nexport default TVDetailData;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Data, Title } from 'routes/Detail';\n\nconst NoResult: React.FC = () => (\n  <Data>\n    <Helmet title=\"No result | Nomflix\" />\n    <Title>No result</Title>\n  </Data>\n);\n\nexport default NoResult;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { moviesAPI, tvAPI, MovieDetail, TvDetail } from 'api';\nimport Loading from 'components/Loading';\nimport MovieDetailData from 'components/MovieDetailData';\nimport TVDetailData from 'components/TVDetailData';\nimport NoResult from 'components/NoResult';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div<{ bgURL: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgURL});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div<{ bgURL: string }>`\n  width: 30%;\n  background-image: url(${props => props.bgURL});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nexport const Data = styled.div`\n  width: 70%;\n  margin-left: 40px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 32px;\n`;\n\nexport const ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Item = styled.span``;\n\nexport const Divider = styled.span`\n  margin: 0 10px;\n`;\n\nexport const Overview = styled.p`\n  font-size: 14px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst useFetch = (pathname: string, id: string | undefined) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [result, setResult] = useState<MovieDetail | TvDetail | null>(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (id) {\n          const movieId = parseInt(id);\n          if (pathname.includes('/movie/')) {\n            const { data } = await moviesAPI.movieDetail(movieId);\n            setResult(data);\n          } else {\n            const { data } = await tvAPI.showDetail(movieId);\n            setResult(data);\n          }\n        } else {\n          throw Error('Id is undefined.');\n        }\n      } catch (e) {\n        setError(e);\n        setResult(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [pathname, id]);\n\n  return { loading, result, error };\n};\n\nconst renderData = (result: MovieDetail | TvDetail) => {\n  if ('original_title' in result) {\n    return <MovieDetailData result={result} />;\n  } else if ('original_name' in result) {\n    return <TVDetailData result={result} />;\n  }\n  return null;\n};\n\nconst Detail: React.FC<RouteComponentProps<{ id: string | undefined }>> = ({\n  location: { pathname },\n  history: { push },\n  match: { params }\n}) => {\n  const { loading, result } = useFetch(pathname, params.id);\n  return (\n    <>\n      {loading ? (\n        <>\n          <Helmet title=\"Loading | Nomflix\" />\n          <Loading />\n        </>\n      ) : (\n        <Container>\n          {result ? (\n            <>\n              <Backdrop\n                bgURL={`https://image.tmdb.org/t/p/original${\n                  result.backdrop_path\n                }`}\n              />\n              <Content>\n                <Cover\n                  bgURL={\n                    result.poster_path\n                      ? `https://image.tmdb.org/t/p/original${\n                          result.poster_path\n                        }`\n                      : require('assets/noPosterSmall.png')\n                  }\n                />\n                {renderData(result)}\n              </Content>\n            </>\n          ) : (\n            <Content>\n              <NoResult />\n            </Content>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(Detail);\n","import React from 'react';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Navigation = styled.header`\n  color: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst ListItem = styled.li<{ current: boolean }>`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst StyledLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header: React.FC<RouteComponentProps> = ({ location: { pathname } }) => (\n  <Navigation>\n    <List>\n      <ListItem current={pathname === '/'}>\n        <StyledLink to=\"/\">Movies</StyledLink>\n      </ListItem>\n      <ListItem current={pathname === '/tv'}>\n        <StyledLink to=\"/tv\">TV</StyledLink>\n      </ListItem>\n      <ListItem current={pathname === '/search'}>\n        <StyledLink to=\"/search\">Search</StyledLink>\n      </ListItem>\n    </List>\n  </Navigation>\n);\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from 'routes/Home';\nimport TV from 'routes/TV';\nimport Search from 'routes/Search';\nimport Detail from 'routes/Detail';\nimport Header from './Header';\n\nconst Router: React.FC = () => (\n  <HashRouter>\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </HashRouter>\n);\n\nexport default Router;\n","import {\n  createGlobalStyle,\n  GlobalStyleComponent,\n  DefaultTheme\n} from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles: GlobalStyleComponent<{}, DefaultTheme> = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\nconst App: React.FC = () => (\n  <>\n    <GlobalStyles />\n    <Router />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}