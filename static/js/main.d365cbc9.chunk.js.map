{"version":3,"sources":["assets/noPosterSmall.png","api.ts","components/Loading.tsx","components/Section.tsx","components/Poster.tsx","routes/Home.tsx","routes/TV.tsx","routes/Search.tsx","components/MovieDetailData.tsx","components/TVDetailData.tsx","routes/Detail.tsx","components/Header.tsx","components/Router.tsx","components/GlobalStyles.tsx","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","API","Axios","create","baseURL","params","api_key","process","language","moviesAPI","get","id","concat","append_to_response","term","query","encodeURIComponent","tvAPI","Container","styled","div","_templateObject","Loading","react_default","a","createElement","role","aria-label","Section_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","Section_Container","Poster_templateObject","Image","Poster_templateObject2","props","bgURL","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","imageURL","rating","year","_ref$isMovie","isMovie","Link","to","Poster_Container","require","Poster_Title","length","substring","Home_templateObject","Home","_useFetch","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","result","setResult","fetchData","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_nowPlaying","_ref3","_upcoming","_ref4","_popular","wrap","_context","prev","next","sent","nowPlaying","data","results","upcoming","popular","t0","finish","stop","this","apply","arguments","useEffect","useFetch","Fragment","Helmet_default","components_Loading","Home_Container","components_Section","map","movie","components_Poster","key","poster_path","original_title","vote_average","release_date","TV_templateObject","TV","_topRated","_airingToday","topRated","airingToday","TV_Container","show","original_name","first_air_date","Search_templateObject","Form","form","Search_templateObject2","Input","input","Search_templateObject3","Search","defaultValue","value","setValue","onChange","event","currentTarget","useInput","_useState9","_useState10","termValue","setTermValue","_useState7","_useState8","setResults","_movieResults","_tvResults","abrupt","movieResults","tvResults","Search_Container","onSubmit","preventDefault","assign","placeholder","MovieDetailData","Data","Detail_Title","ItemContainer","Item","Divider","runtime","genres","genre","index","name","Overview","overview","TVDetailData","episode_run_time","Detail_templateObject","Backdrop","Detail_templateObject2","Content","Detail_templateObject3","Cover","Detail_templateObject4","Detail_templateObject5","h3","Detail_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","withRouter","pathname","location","push","history","match","parsedId","parseInt","isNaN","_data","includes","Detail_Container","backdrop_path","components_MovieDetailData","components_TVDetailData","renderData","Navigation","header","Header_templateObject","List","ul","Header_templateObject2","ListItem","li","Header_templateObject3","current","StyledLink","Header_templateObject4","Router","HashRouter","components_Header","Switch","Route","exact","path","component","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","components_Router","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d365cbc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import Axios, { AxiosInstance, AxiosPromise } from 'axios';\n\nconst API: AxiosInstance = Axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: process.env.REACT_APP_TMDB_KEY,\n    language: 'en-US'\n  }\n});\n\nexport interface MovieItem {\n  vote_count: number;\n  id: number;\n  video: boolean;\n  vote_average: number;\n  title: string;\n  popularity: number;\n  poster_path: string;\n  original_language: string;\n  original_title: string;\n  genre_ids: Array<number>;\n  backdrop_path: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n}\n\ninterface MovieListData {\n  page: number;\n  total_results: number;\n  total_pages: number;\n  results: MovieItem[];\n}\n\ninterface Genre {\n  id: number;\n  name: string;\n}\n\ninterface Company {\n  id: number;\n  logo_path: string | null;\n  name: string;\n  origin_country: string;\n}\n\ninterface Country {\n  iso_3166_1: string;\n  name: string;\n}\n\ninterface Language {\n  iso_639_1: string;\n  name: string;\n}\n\nexport interface MovieDetail {\n  adult: boolean;\n  backdrop_path: string;\n  budget: number;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  production_companies: Company[];\n  production_countries: Country[];\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  spoken_languages: Language[];\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\ninterface IMoviesAPI {\n  nowPlaying: () => AxiosPromise<MovieListData>;\n  upcoming: () => AxiosPromise<MovieListData>;\n  popular: () => AxiosPromise<MovieListData>;\n  movieDetail: (id: number) => AxiosPromise<MovieDetail>;\n  search: (term: string) => AxiosPromise<MovieListData>;\n}\n\nexport const moviesAPI: IMoviesAPI = {\n  nowPlaying: () => API.get('movie/now_playing'),\n  upcoming: () => API.get('movie/upcoming'),\n  popular: () => API.get('movie/popular'),\n  movieDetail: (id: number) =>\n    API.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: (term: string) =>\n    API.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport interface TvItem {\n  original_name: string;\n  genre_ids: Array<number>;\n  name: string;\n  popularity: number;\n  origin_country: Array<string>;\n  vote_count: number;\n  first_air_date: string;\n  backdrop_path: string;\n  original_language: string;\n  id: number;\n  vote_average: number;\n  overview: string;\n  poster_path: string;\n}\n\ninterface TvListData {\n  page: number;\n  total_results: number;\n  total_pages: number;\n  results: TvItem[];\n}\n\ninterface TvProducer {\n  id: number;\n  credit_id: string;\n  name: string;\n  gender: number;\n  profile_path: string | null;\n}\n\ninterface LastEpisode {\n  air_date: string;\n  episode_number: number;\n  id: number;\n  name: string;\n  overview: string;\n  production_code: number | null;\n  season_number: number;\n  show_id: number;\n  still_path: string;\n  vote_average: number;\n  vote_count: number;\n}\n\ninterface Network {\n  name: string;\n  id: number;\n  logo_path: string;\n  origin_country: string;\n}\n\ninterface TvCompany {\n  id: number;\n  logo_path: string;\n  name: string;\n  origin_country: string;\n}\n\ninterface Season {\n  air_date: string;\n  episode_count: number;\n  id: number;\n  name: string;\n  overview: string;\n  poster_path: string | null;\n  season_number: number;\n}\n\nexport interface TvDetail {\n  backdrop_path: string;\n  created_by: TvProducer[];\n  episode_run_time: Array<number>;\n  first_air_date: string;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  in_production: boolean;\n  languages: Array<string>;\n  last_air_date: string;\n  last_episode_to_air: LastEpisode;\n  name: string;\n  next_episode_to_air: null;\n  networks: Network[];\n  number_of_episodes: number;\n  number_of_seasons: number;\n  origin_country: Array<string>;\n  original_language: string;\n  original_name: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  production_companies: TvCompany[];\n  seasons: Season[];\n  status: string;\n  type: string;\n  vote_average: number;\n  vote_count: number;\n}\n\ninterface ITvAPI {\n  topRated: () => AxiosPromise<TvListData>;\n  popular: () => AxiosPromise<TvListData>;\n  airingToday: () => AxiosPromise<TvListData>;\n  showDetail: (id: number) => AxiosPromise<TvDetail>;\n  search: (string: string) => AxiosPromise<TvListData>;\n}\n\nexport const tvAPI: ITvAPI = {\n  topRated: () => API.get('tv/top_rated'),\n  popular: () => API.get('tv/popular'),\n  airingToday: () => API.get('tv/airing_today'),\n  showDetail: (id: number) =>\n    API.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: (term: string) =>\n    API.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loading = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      Loading...\n    </span>\n  </Container>\n);\n\nexport default Loading;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n  margin-top: 25px;\n`;\n\ninterface IProps {\n  title: string;\n}\n\nconst Section: React.FunctionComponent<IProps> = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nexport default Section;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { StyledFunction } from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div<{ bgURL: string }>`\n  background-image: url(${props => props.bgURL});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\ninterface IProps {\n  id: number;\n  imageURL: string;\n  title: string;\n  rating: number;\n  year: string;\n  isMovie?: boolean;\n}\n\nconst Poster: React.FunctionComponent<IProps> = ({\n  id,\n  imageURL,\n  title,\n  rating,\n  year,\n  isMovie = false\n}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgURL={\n            imageURL\n              ? `https://image.tmdb.org/t/p/w300${imageURL}`\n              : require('../assets/noPosterSmall.png')\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ★\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nexport default Poster;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { moviesAPI, MovieItem } from '../api';\nimport Loading from '../components/Loading';\nimport Section from '../components/Section';\nimport Poster from '../components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst useFetch = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [result, setResult] = useState<{\n    nowPlaying: MovieItem[] | null;\n    upcoming: MovieItem[] | null;\n    popular: MovieItem[] | null;\n  } | null>(null);\n\n  const fetchData = async () => {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesAPI.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesAPI.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesAPI.popular();\n      setResult({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { loading, result, error };\n};\n\nconst Home: React.FunctionComponent = () => {\n  const { loading, result, error } = useFetch();\n  return (\n    <>\n      <Helmet title=\"Movies | Nomflix\" />\n      {loading ? (\n        <Loading />\n      ) : (\n        <Container>\n          {result && result.nowPlaying && result.nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {result.nowPlaying.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.upcoming && result.upcoming.length > 0 && (\n            <Section title=\"Upcoming\">\n              {result.upcoming.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.popular && result.popular.length > 0 && (\n            <Section title=\"Popular\">\n              {result.popular.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { TvItem, tvAPI } from '../api';\nimport Loading from '../components/Loading';\nimport Section from '../components/Section';\nimport Poster from '../components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst useFetch = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [result, setResult] = useState<{\n    topRated: TvItem[] | null;\n    popular: TvItem[] | null;\n    airingToday: TvItem[] | null;\n  } | null>(null);\n\n  const fetchData = async () => {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvAPI.topRated();\n      const {\n        data: { results: popular }\n      } = await tvAPI.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvAPI.airingToday();\n      setResult({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { loading, result, error };\n};\n\nconst TV: React.FunctionComponent = () => {\n  const { loading, result, error } = useFetch();\n  return (\n    <>\n      <Helmet title=\"TV Shows | Nomflix\" />\n      {loading ? (\n        <Loading />\n      ) : (\n        <Container>\n          {result && result.topRated && result.topRated.length > 0 && (\n            <Section title=\"Top Rated\">\n              {result.topRated.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.popular && result.popular.length > 0 && (\n            <Section title=\"Popular\">\n              {result.popular.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {result && result.airingToday && result.airingToday.length > 0 && (\n            <Section title=\"Airing Today\">\n              {result.airingToday.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default TV;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { MovieItem, TvItem, moviesAPI, tvAPI } from '../api';\nimport Loading from '../components/Loading';\nimport Section from '../components/Section';\nimport Poster from '../components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst useInput = (defaultValue: string) => {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value }\n    } = event;\n    setValue(value);\n  };\n\n  return { value, onChange };\n};\n\nconst useFetch = (term: string) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [results, setResults] = useState<{\n    movieResults: MovieItem[] | null;\n    tvResults: TvItem[] | null;\n  } | null>(null);\n\n  const fetchData = async () => {\n    try {\n      if (term.length === 0) return;\n      setLoading(true);\n      const {\n        data: { results: movieResults }\n      } = await moviesAPI.search(term);\n      const {\n        data: { results: tvResults }\n      } = await tvAPI.search(term);\n      setResults({\n        movieResults,\n        tvResults\n      });\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [term]);\n\n  return { loading, results, error };\n};\n\nconst Search: React.FunctionComponent = () => {\n  const term = useInput('');\n  const [termValue, setTermValue] = useState('');\n  const { loading, results, error } = useFetch(termValue);\n  return (\n    <Container>\n      <Helmet title=\"Search | Nomflix\" />\n      <Form\n        onSubmit={(event: React.FormEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          setTermValue(term.value);\n        }}\n      >\n        <Input {...term} placeholder=\"Search Movies or TV Shows...\" />\n      </Form>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {results && results.movieResults && results.movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {results.movieResults.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageURL={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {results && results.tvResults && results.tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {results.tvResults.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageURL={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { MovieDetail } from '../api';\nimport {\n  Data,\n  ItemContainer,\n  Title,\n  Item,\n  Divider,\n  Overview\n} from '../routes/Detail';\n\ninterface IProps {\n  result: MovieDetail;\n}\n\nconst MovieDetailData: React.FunctionComponent<IProps> = ({ result }) => (\n  <Data>\n    <Helmet title={`${result.original_title} | Nomflix`} />\n    <Title>{result.original_title}</Title>\n    <ItemContainer>\n      <Item>{result.release_date.substring(0, 4)}</Item>\n      <Divider>•</Divider>\n      <Item>{result.runtime} min</Item>\n      <Divider>•</Divider>\n      <Item>\n        {result.genres &&\n          result.genres.map((genre, index) =>\n            index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n          )}\n      </Item>\n    </ItemContainer>\n    <Overview>{result.overview}</Overview>\n  </Data>\n);\n\nexport default MovieDetailData;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { TvDetail } from '../api';\nimport {\n  Data,\n  ItemContainer,\n  Title,\n  Item,\n  Divider,\n  Overview\n} from '../routes/Detail';\n\ninterface IProps {\n  result: TvDetail;\n}\n\nconst TVDetailData: React.FunctionComponent<IProps> = ({ result }) => (\n  <Data>\n    <Helmet title={`${result.original_name} | Nomflix`} />\n    <Title>{result.original_name}</Title>\n    <ItemContainer>\n      <Item>{result.first_air_date.substring(0, 4)}</Item>\n      <Divider>•</Divider>\n      <Item>{result.episode_run_time[0]} min</Item>\n      <Divider>•</Divider>\n      <Item>\n        {result.genres &&\n          result.genres.map((genre, index) =>\n            index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n          )}\n      </Item>\n    </ItemContainer>\n    <Overview>{result.overview}</Overview>\n  </Data>\n);\n\nexport default TVDetailData;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { moviesAPI, tvAPI, MovieDetail, TvDetail } from '../api';\nimport Loading from '../components/Loading';\nimport MovieDetailData from '../components/MovieDetailData';\nimport TVDetailData from '../components/TVDetailData';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div<{ bgURL: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgURL});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div<{ bgURL: string }>`\n  width: 30%;\n  background-image: url(${props => props.bgURL});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nexport const Data = styled.div`\n  width: 70%;\n  margin-left: 40px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 32px;\n`;\n\nexport const ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Item = styled.span``;\n\nexport const Divider = styled.span`\n  margin: 0 10px;\n`;\n\nexport const Overview = styled.p`\n  font-size: 14px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst useFetch = (pathname: string, id: number) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<ErrorEvent | null>(null);\n  const [result, setResult] = useState<MovieDetail | TvDetail | null>(null);\n\n  const fetchData = async () => {\n    try {\n      if (pathname.includes('/movie/')) {\n        const { data } = await moviesAPI.movieDetail(id);\n        setResult(data);\n      } else {\n        const { data } = await tvAPI.showDetail(id);\n        setResult(data);\n      }\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { loading, result, error };\n};\n\nconst renderData = (result: MovieDetail | TvDetail) => {\n  if ('original_title' in result) {\n    return <MovieDetailData result={result} />;\n  } else if ('original_name' in result) {\n    return <TVDetailData result={result} />;\n  }\n  return null;\n};\n\nconst Detail: React.FunctionComponent<\n  RouteComponentProps<{ id: string | undefined }>\n> = ({ location: { pathname }, history: { push }, match: { params } }) => {\n  if (!params.id) {\n    push('/');\n    return null;\n  } else {\n    const parsedId = parseInt(params.id);\n    if (isNaN(parsedId)) {\n      push('/');\n    }\n    const { loading, result, error } = useFetch(pathname, parsedId);\n    return (\n      <>\n        {loading ? (\n          <>\n            <Helmet title=\"Loading | Nomflix\" />\n            <Loading />\n          </>\n        ) : (\n          <Container>\n            {result && (\n              <>\n                <Backdrop\n                  bgURL={`https://image.tmdb.org/t/p/original${\n                    result.backdrop_path\n                  }`}\n                />\n                <Content>\n                  <Cover\n                    bgURL={\n                      result.poster_path\n                        ? `https://image.tmdb.org/t/p/original${\n                            result.poster_path\n                          }`\n                        : require('../assets/noPosterSmall.png')\n                    }\n                  />\n                  {renderData(result)}\n                </Content>\n              </>\n            )}\n          </Container>\n        )}\n      </>\n    );\n  }\n};\n\nexport default withRouter(Detail);\n","import React from 'react';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Navigation = styled.header`\n  color: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst ListItem = styled.li<{ current: boolean }>`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst StyledLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header: React.FunctionComponent<RouteComponentProps> = ({\n  location: { pathname }\n}) => (\n  <Navigation>\n    <List>\n      <ListItem current={pathname === '/'}>\n        <StyledLink to=\"/\">Movies</StyledLink>\n      </ListItem>\n      <ListItem current={pathname === '/tv'}>\n        <StyledLink to=\"/tv\">TV</StyledLink>\n      </ListItem>\n      <ListItem current={pathname === '/search'}>\n        <StyledLink to=\"/search\">Search</StyledLink>\n      </ListItem>\n    </List>\n  </Navigation>\n);\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from '../routes/Home';\nimport TV from '../routes/TV';\nimport Search from '../routes/Search';\nimport Detail from '../routes/Detail';\nimport Header from './Header';\n\nconst Router: React.FunctionComponent = () => (\n  <HashRouter>\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </HashRouter>\n);\n\nexport default Router;\n","import {\n  createGlobalStyle,\n  GlobalStyleComponent,\n  DefaultTheme\n} from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles: GlobalStyleComponent<{}, DefaultTheme> = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\nconst App: React.FunctionComponent = () => (\n  <>\n    <GlobalStyles />\n    <Router />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}